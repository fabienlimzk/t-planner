{"version":3,"sources":["component/Home.jsx","component/auth/Register.jsx","component/auth/Login.jsx","component/auth/Profile.jsx","component/Navigation.jsx","component/AllActivities.jsx","component/activities/EditActivity.jsx","component/map/SingleMap.js","component/activities/Activity.jsx","component/map/Map.js","component/activities/AddActivity.jsx","component/trips/EditTrip.jsx","component/trips/Trip.jsx","component/trips/AddTrip.jsx","component/AllPackingLists.jsx","component/packingLists/EditPackingList.jsx","component/packingLists/PackingList.jsx","component/packingLists/AddPackingList.jsx","component/PrivateRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["URL","process","Home","state","trips","fetchTrips","token","localStorage","getItem","Axios","get","headers","then","res","setState","data","catch","err","console","log","deleteTrip","e","id","target","delete","filter","trip","_id","this","Container","fluid","Row","map","createdBy","props","currentUser","Col","key","md","Card","Body","title","Badge","variant","country","start_date","end_date","description","to","Button","onClick","size","style","float","Component","Register","firstname","lastname","username","email","password","changeHandler","name","value","registerHandler","register","Form","Control","type","onChange","block","Login","loginHandler","login","Profile","status","getUserProfile","user","submitHandler","put","componentDidMount","decode","removeItem","Navigation","logout","Navbar","bg","expand","Brand","href","alt","src","width","height","className","Toggle","aria-controls","Collapse","Nav","AllActivities","activities","deleteActivity","activity","prevProps","Img","image_url","EditActivity","duration","address","split","Geocode","enableDebug","setApiKey","Map","fromLatLng","place","mapPosition","lat","lng","error","AsyncMap","withScriptjs","withGoogleMap","google","defaultZoom","zoom","defaultCenter","draggable","position","googleMapURL","loadingElement","containerElement","mapElement","React","Activity","edit","showEdit","prevState","editActivity","obj","getActivity","fetchActivities","match","params","SingleMap","getCity","addressArray","i","length","types","long_name","getArea","j","getState","event","onInfoWindowClose","onPlaceSelected","formatted_address","address_components","city","area","latValue","geometry","location","lngValue","newplace","markerPosition","updatePlace","center","response","results","nextProps","nextState","paddingLeft","marginTop","marginBottom","point","undefined","htmlFor","readOnly","AddActivity","trip_id","post","addActivity","savedActivity","placeholder","EditTrip","editTrip","Trip","add","showAdd","getTrip","AddTrip","AllPackingLists","packingLists","fetchPackingLists","deletePackingList","packingList","index","EditPackingList","items","titleChangeHandler","itemChangeHandler","removeHandler","splice","editPackingList","addItem","item","PackingList","getPackingList","ListGroup","Item","as","AddPackingList","PrivateRoute","component","isAuth","rest","render","App","errorMessage","credentials","setItem","message","logoutHandler","preventDefault","Alert","path","exact","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.838be959.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Button, Row, Card, Col, Badge } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n// import Map from \"./map/Map\";\n// import SimpleMap from \"./map/SimpleMap\";\n// import SearchBox from \"./map/SearchBox\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class Home extends Component {\n  state = {\n    trips: [],\n  };\n\n  fetchTrips = () => {\n    let token = localStorage.getItem(\"token\");\n\n    Axios.get(`${URL}/trips`, {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    })\n      .then((res) => {\n        this.setState({ trips: res.data.trips });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  deleteTrip = (e) => {\n    const id = e.target.id;\n    Axios.delete(`${URL}/trips/${e.target.id}`)\n      .then(() => {\n        let trips = this.state.trips.filter((trip) => trip._id !== id);\n        this.setState({ trips });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.fetchTrips();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Trips</h1>\n        <Container fluid>\n          <Row>\n            {this.state.trips.map((trip) =>\n              trip.createdBy._id === this.props.currentUser._id ? (\n                <Col key={trip._id} md=\"3\">\n                  <Card>\n                    <Card.Body>\n                      <div>\n                        <h4>{trip.title}</h4>\n                      </div>\n                      <div>\n                        <Badge variant=\"primary\">{trip.country}</Badge>\n                      </div>\n                      <div>\n                        <Badge variant=\"info\">{trip.start_date}</Badge> to\n                        <Badge variant=\"info\">{trip.end_date}</Badge>\n                      </div>\n                      <div>{trip.description}</div>\n                      <div>\n                        <Link to={`/trip/${trip._id}`}>View</Link>\n                        <Button\n                          onClick={this.deleteTrip}\n                          variant=\"danger\"\n                          size=\"sm\"\n                          id={trip._id}\n                          style={{ float: \"right\" }}\n                        >\n                          Delete\n                        </Button>\n                      </div>\n                    </Card.Body>\n                  </Card>\n                </Col>\n              ) : (\n                \"\"\n              )\n            )}\n          </Row>\n          {/* <SearchBox /> */}\n          {/* <h4>Places pinned</h4> */}\n          {/* <SimpleMap /> */}\n          {/* <SingleMap\n              google={this.props.google}\n              center={{ lat:15.7076, lng:104.1920275 }} //vietnam\n              // center={{ lat:33.0912, lng: 19.5466 }}\n              height=\"650px\"\n              zoom={2}\n              updatePlace={this.updatePlace}\n              activities={this.props.activities}\n            /> */}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Row, Container } from \"react-bootstrap\";\n\nexport default class Register extends Component {\n  state = {\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  registerHandler = () => {\n    //login here\n    this.props.register(this.state);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <div>\n          <Container>\n            <Row>\n              First Name:\n              <Form.Control\n                name=\"firstname\"\n                type=\"text\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Last Name:\n              <Form.Control\n                name=\"lastname\"\n                type=\"text\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Username:\n              <Form.Control\n                name=\"username\"\n                type=\"text\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Email Address:\n              <Form.Control\n                name=\"email\"\n                type=\"email\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Password:\n              <Form.Control\n                name=\"password\"\n                type=\"password\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Button variant=\"primary\" block onClick={this.registerHandler}>\n              Register\n            </Button>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Row, Form, Button, Container } from \"react-bootstrap\";\n\nexport default class Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  loginHandler = () => {\n    //login here\n    this.props.login(this.state);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <div>\n          <Container>\n            <Row>\n              Email Address:\n              <Form.Control\n                name=\"email\"\n                type=\"email\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Password:\n              <Form.Control\n                name=\"password\"\n                type=\"password\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Button variant=\"primary\" block onClick={this.loginHandler}>\n              {\" \"}\n              Login\n            </Button>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Row, Container } from \"react-bootstrap\";\nimport { decode } from \"jsonwebtoken\";\nimport Axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class Profile extends Component {\n  state = {\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    email: \"\",\n    status: false,\n  };\n\n  getUserProfile = (token) => {\n    Axios.get(`${URL}/auth/user`, {\n      headers: { \"x-auth-token\": token },\n    })\n      .then((res) =>\n        this.setState({\n          firstname: res.data.user.firstname,\n          lastname: res.data.user.lastname,\n          username: res.data.user.username,\n          email: res.data.user.email,\n        })\n      )\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    //login here\n    // this.props.edit(this.state, this.props.user.id);\n    let token = localStorage.getItem(\"token\");\n\n    Axios.put(\n      `${URL}/auth/user`,\n      {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        username: this.state.username,\n        email: this.state.email,\n      },\n      {\n        headers: { \"x-auth-token\": token },\n      }\n    )\n      .then((res) => {\n        // console.log(\"done\");\n        this.getUserProfile(token);\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount = () => {\n    let token = localStorage.getItem(\"token\");\n\n    if (!(token == null)) {\n      let decodedToken = decode(token);\n\n      if (!decodedToken) {\n        localStorage.removeItem(\"token\");\n      } else {\n        this.getUserProfile(token);\n      }\n    }\n  };\n\n  render() {\n    let { firstname, lastname, username, email } = this.state;\n    // console.log(this.state);\n\n    if (this.state.status) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div>\n        <h1>Profile</h1>\n        <div>\n          <Container>\n            <Row>\n              First Name:\n              <Form.Control\n                name=\"firstname\"\n                type=\"text\"\n                value={firstname}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Last Name:\n              <Form.Control\n                name=\"lastname\"\n                type=\"text\"\n                value={lastname}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Username:\n              <Form.Control\n                name=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Email Address:\n              <Form.Control\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            {/* <Row>\n              Password:\n              <Form.Control\n                name=\"password\"\n                type=\"password\"\n                onChange={this.changeHandler}\n              />\n            </Row> */}\n            <Button variant=\"primary\" block onClick={this.submitHandler}>\n              Update\n            </Button>\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navigation({ user, logout }) {\n  return (\n    <Navbar bg=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        <img\n          alt=\"\"\n          src=\"/logo.png\"\n          width=\"45\"\n          height=\"35\"\n          className=\"d-inline-block align-top\"\n          />\n          T-Planner\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Link className=\"nav-link\" to=\"/\">\n            Trips\n          </Link>\n          <Link className=\"nav-link\" to=\"/trip/add\">\n            Add Trip\n          </Link>\n          <Link className=\"nav-link\" to=\"/packingLists\">\n            Packing List\n          </Link>\n          <Link className=\"nav-link\" to=\"/packingList/add\">\n            Add Packing List\n          </Link>\n        </Nav>\n        <Nav>\n          {user ? (\n            <>\n              <Link to={`/user/${user._id}`} className=\"nav-link\">\n                {user.firstname} {user.lastname}\n              </Link>\n              <Link to=\"/logout\" onClick={logout} className=\"nav-link\">\n                Logout\n              </Link>\n            </>\n          ) : (\n            <>\n              <Link to=\"/login\" className=\"nav-link\">\n                Login\n              </Link>\n              <Link to=\"/register\" className=\"nav-link\">\n                Register\n              </Link>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Button, Row, Card, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class AllActivities extends Component {\n  state = {\n    activities: [],\n  };\n\n  deleteActivity = (e) => {\n    const id = e.target.id;\n    // console.log(e.target.id);\n    Axios.delete(`${URL}/activities/${id}`)\n      .then(() => {\n        let activities = this.state.activities.filter(\n          (activity) => activity._id !== id\n        );\n        // console.log(activities);\n        this.setState({ activities });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    // this.fetchActivities();\n    this.setState({ activities: this.props.activities });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.activities !== this.props.activities) {\n      this.setState({\n        activities: this.props.activities,\n      });\n    }\n  }\n\n  render() {\n    // console.log(this.props.activities);\n    return (\n      <div>\n        <h1>Activities</h1>\n        <Container fluid>\n          <Row>\n            {this.state.activities.map((activity) => (\n              <Col key={activity._id} md=\"3\">\n                <Card>\n                  <Card.Body>\n                    <div>\n                      <Card.Img variant=\"top\" src={activity.image_url} />\n                    </div>\n                    <div>{activity.title}</div>\n                    <div>{activity.description}</div>\n                    <div>\n                      <Link to={`/activity/${activity._id}`}>View</Link>\n                      <Button\n                        onClick={this.deleteActivity}\n                        variant=\"danger\"\n                        id={activity._id}\n                        size=\"sm\"\n                        style={{ float: \"right\" }}\n                      >\n                        Delete\n                      </Button>\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Row, Container } from \"react-bootstrap\";\n\nexport default class EditActivity extends Component {\n  state = {\n    title: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    duration: \"\",\n    address: \"\",\n    description: \"\",\n    image_url: \"\",\n  };\n\n  changeHandler = (e) => {\n    //allow a re render in activity.jsx\n    this.setState({ [e.target.name]: e.target.value });\n    // console.log(e.target.value);\n  };\n\n  componentDidMount = () => {\n    this.setState(this.props.activity);\n  };\n\n  render() {\n    let {\n      title,\n      start_date,\n      end_date,\n      duration,\n      address,\n      description,\n      image_url,\n    } = this.state;\n\n    return (\n      <div>\n        <Container>\n          <h4>Edit Activity</h4>\n          <div>\n            <Row>\n              Title\n              <Form.Control\n                name=\"title\"\n                value={title}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            {/* {start_date && ( */}\n            <Row>\n              Start date\n              <Form.Control\n                name=\"start_date\"\n                value={start_date.split(\"T\")[0]}\n                type=\"date\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            {/* )} */}\n            <Row>\n              End date\n              <Form.Control\n                name=\"end_date\"\n                value={end_date.split(\"T\")[0]}\n                type=\"date\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Duration\n              <Form.Control\n                name=\"duration\"\n                value={duration}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Address\n              <Form.Control\n                name=\"address\"\n                value={address}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Description\n              <Form.Control\n                name=\"description\"\n                value={description}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Image\n              <Form.Control\n                name=\"image_url\"\n                value={image_url}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Button onClick={this.submitHandler}>Submit</Button>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  InfoWindow,\n  Marker,\n} from \"react-google-maps\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Geocode from \"react-geocode\";\n\nGeocode.enableDebug();\nGeocode.setApiKey(process.env.REACT_APP_API_KEY);\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    // console.log(this.props);\n    Geocode.fromLatLng(\n      this.props.activity.place.mapPosition.lat,\n      this.props.activity.place.mapPosition.lng\n      // this.state.place.mapPosition.lat,\n      // this.state.place.mapPosition.lng\n    ).then(\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n\n  render() {\n    const AsyncMap = withScriptjs(\n      withGoogleMap((props) => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          defaultCenter={{\n            lat: this.props.activity.place.mapPosition.lat,\n            lng: this.props.activity.place.mapPosition.lng,\n          }}\n          >\n          {/*Marker*/}\n          <Marker\n            google={this.props.google}\n            name={\"Dolores park\"}\n            draggable={false}\n            // onDragEnd={this.onMarkerDragEnd}\n            position={{\n              lat: this.props.activity.place.mapPosition.lat,\n              lng: this.props.activity.place.mapPosition.lng,\n            }}\n          />\n          <Marker />\n          \n        </GoogleMap>\n      ))\n    );\n\n    let map;\n      map = (\n        <div>\n            <div className=\"form-group\">\n              <AsyncMap\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: this.props.height }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n              />\n            </div>\n            <br />\n      \n        </div>\n      );\n\n    return map;\n  }\n}\nexport default Map;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport EditActivity from \"./EditActivity\";\nimport { Container, Button } from \"react-bootstrap\";\nimport SingleMap from \"../map/SingleMap\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class Activity extends Component {\n  state = {\n    activity: null,\n    edit: false,\n  };\n\n  showEdit = () => {\n    this.setState((prevState) => ({ edit: !prevState.edit }));\n  };\n\n  editActivity = (obj, id) => {\n    Axios.put(`${URL}/activities/${id}`, obj, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        this.getActivity();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  fetchActivities = () => {\n    let token = localStorage.getItem(\"token\");\n\n    Axios.get(`${URL}/activities`, {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    })\n      .then((res) => {\n        this.setState({ activities: res.data.activities });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  deleteActivity = (e) => {\n    // this.props.deleteActivity(e.target.id);\n    // console.log(this.props);\n  };\n\n  getActivity = () => {\n    Axios.get(`${URL}/activities/${this.props.match.params.id}`, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        // console.log(res.data);\n        this.setState({ activity: res.data.activity });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getActivity();\n  }\n\n  render() {\n    let { activity, edit } = this.state;\n    return (\n      <div>\n        <Container>\n          {activity ? (\n            <div>\n              <div>\n                <h3>{activity.title}</h3>\n              </div>\n              <div>Start: {activity.start_date ? activity.start_date.split(\"T\")[0] : \"\" }</div>\n              <div>End: {activity.end_date ? activity.end_date.split(\"T\")[0] : \"\" }</div>\n              <div>Duration: {activity.duration}</div>\n              <div>Address: {activity.address}</div>\n              <div>Description: {activity.description}</div>\n              <div>\n\n              <img src={activity.image_url} alt=\"\"/>\n              </div>\n              <Button onClick={this.showEdit}>Edit Activity</Button>\n              {edit && (\n                <EditActivity\n                  activity={activity}\n                  editActivity={this.editActivity}\n                  />\n                  )}\n                <SingleMap\n                google={this.props.google}\n                height=\"650px\"\n                zoom={2}\n                // updatePlace={this.updatePlace}\n                activity={activity}\n                />\n  \n                \n            </div>\n          ) : (\n            \"Loading...\"\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport {\n  withGoogleMap,\n  GoogleMap,\n  withScriptjs,\n  // InfoWindow,\n  Marker,\n} from \"react-google-maps\";\nimport Autocomplete from \"react-google-autocomplete\";\nimport Geocode from \"react-geocode\";\n\nGeocode.enableDebug();\nGeocode.setApiKey(process.env.REACT_APP_API_KEY);\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: {\n        city: \"\",\n        area: \"\",\n        state: \"\",\n        address: \"\",\n        mapPosition: {\n          lat: 1.2832,\n          lng: 103.8466,\n        },\n        markerPosition: {\n          lat: this.props.center.lat,\n          lng: this.props.center.lng,\n        },\n      },\n    };\n  }\n  /**\n   * Get the current address from the default map position and set those values in the state\n   */\n  componentDidMount() {\n    Geocode.fromLatLng(\n      this.state.place.markerPosition.lat,\n      this.state.place.markerPosition.lng\n      // this.state.place.mapPosition.lat,\n      // this.state.place.mapPosition.lng\n    ).then(\n      (response) => {\n        const address = response.results[0].formatted_address,\n          addressArray = response.results[0].address_components,\n          city = this.getCity(addressArray),\n          area = this.getArea(addressArray),\n          state = this.getState(addressArray);\n        // console.log(\"city\", city, area, state);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  /**\n   * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n   *\n   * @param nextProps\n   * @param nextState\n   * @return {boolean}\n   */\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state != nextState) {\n      return true;\n    } else if (this.props.center.lat === nextProps.center.lat) {\n      return false;\n    }\n  }\n  /**\n   * Get the city and set the city input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getCity = (addressArray) => {\n    let city = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      if (\n        addressArray[i].types[0] &&\n        \"administrative_area_level_2\" === addressArray[i].types[0]\n      ) {\n        city = addressArray[i].long_name;\n        return city;\n      }\n    }\n  };\n  /**\n   * Get the area and set the area input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getArea = (addressArray) => {\n    let area = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      if (addressArray[i].types[0]) {\n        for (let j = 0; j < addressArray[i].types.length; j++) {\n          if (\n            \"sublocality_level_1\" === addressArray[i].types[j] ||\n            \"locality\" === addressArray[i].types[j]\n          ) {\n            area = addressArray[i].long_name;\n            return area;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Get the address and set the address input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getState = (addressArray) => {\n    let state = \"\";\n    for (let i = 0; i < addressArray.length; i++) {\n      for (let i = 0; i < addressArray.length; i++) {\n        if (\n          addressArray[i].types[0] &&\n          \"administrative_area_level_1\" === addressArray[i].types[0]\n        ) {\n          state = addressArray[i].long_name;\n          return state;\n        }\n      }\n    }\n  };\n  /**\n   * And function for city,state and address input\n   @param event\n   */\n  onChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  /**\n   * This Event triggers when the marker window is closed\n   *\n   @param event\n   */\n  onInfoWindowClose = (event) => {};\n  /**\n   * When the user types an address in the search box\n   * @param place\n   */\n  onPlaceSelected = (place) => {\n    const address = place.formatted_address,\n      addressArray = place.address_components,\n      city = this.getCity(addressArray),\n      area = this.getArea(addressArray),\n      state = this.getState(addressArray),\n      latValue = place.geometry.location.lat(),\n      lngValue = place.geometry.location.lng();\n\n    const newplace = {\n      address,\n      city,\n      area,\n      state,\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue,\n      },\n      markerPosition: {\n        lat: latValue,\n        lng: lngValue,\n      },\n    };\n    // Set these values in the state.\n    this.setState({ place: newplace });\n    this.props.updatePlace(newplace);\n  };\n  /**\n   *\n   * @param event\n   */\n\n  render() {\n    // console.log(\"lat\", this.state.place.mapPosition.lat);\n    // console.log(\"lng\", this.state.place.mapPosition.lng);\n    // console.log(\"place\", this.state.place.mapPosition);\n\n    const AsyncMap = withScriptjs(\n      withGoogleMap((props) => (\n        <GoogleMap\n          google={this.props.google}\n          defaultZoom={this.props.zoom}\n          defaultCenter={{\n            lat: this.state.place.mapPosition.lat,\n            lng: this.state.place.mapPosition.lng,\n          }}\n        >\n          {/* For Auto complete Search Box */}\n          <Autocomplete\n            style={{\n              width: \"100%\",\n              height: \"40px\",\n              paddingLeft: \"16px\",\n              marginTop: \"2px\",\n              marginBottom: \"100px\",\n            }}\n            onPlaceSelected={this.onPlaceSelected}\n            types={[\"(regions)\"]}\n          />\n          {/*Marker*/}\n          <Marker\n            google={this.props.google}\n            name={\"Dolores park\"}\n            draggable={false}\n            // onDragEnd={this.onMarkerDragEnd}\n            position={{\n              lat: this.state.place.markerPosition.lat,\n              lng: this.state.place.markerPosition.lng,\n            }}\n          />\n          <Marker />\n          {/* InfoWindow on top of marker */}\n          {/* <InfoWindow\n            onClose={this.onInfoWindowClose}\n            position={{\n              lat: this.state.place.markerPosition.lat + 0.0018,\n              lng: this.state.place.markerPosition.lng,\n            }}\n          > */}\n            {/* <div>\n              <span style={{ padding: 0, margin: 0 }}>\n                {this.state.address}\n              </span>\n            </div>\n          </InfoWindow> */}\n          {this.props.activities.map((point) => (\n            <Marker\n              key={point._id}\n              position={{\n                lat: point.place.mapPosition.lat,\n                lng: point.place.mapPosition.lng,\n              }}\n            />\n          ))}\n          \n        </GoogleMap>\n      ))\n    );\n\n    let map;\n    if (this.props.center.lat !== undefined) {\n      map = (\n        <div>\n          <div>\n            <div className=\"form-group\">\n              <AsyncMap\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&libraries=places`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: this.props.height }} />}\n                mapElement={<div style={{ height: `100%` }} />}\n              />\n            </div>\n            <br />\n            <label htmlFor=\"\">City</label>\n            <input\n              type=\"text\"\n              name=\"city\"\n              className=\"form-control\"\n              onChange={this.onChange}\n              readOnly=\"readOnly\"\n              value={this.state.place.city}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">Area</label>\n            <input\n              type=\"text\"\n              name=\"area\"\n              className=\"form-control\"\n              onChange={this.onChange}\n              readOnly=\"readOnly\"\n              value={this.state.place.area}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">State</label>\n            <input\n              type=\"text\"\n              name=\"state\"\n              className=\"form-control\"\n              onChange={this.onChange}\n              readOnly=\"readOnly\"\n              value={this.state.place.state}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"\">Address</label>\n            <input\n              type=\"text\"\n              name=\"address\"\n              className=\"form-control\"\n              onChange={this.onChange}\n              readOnly=\"readOnly\"\n              value={this.state.place.address}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      map = <div style={{ height: this.props.height }} />;\n    }\n    return map;\n  }\n}\nexport default Map;\n\n","import React, { Component } from \"react\";\nimport { Form, Button, Row, Container } from \"react-bootstrap\";\nimport Axios from \"axios\";\n// import { Redirect } from \"react-router-dom\";\nimport Map from \"../map/Map\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class AddActivity extends Component {\n  state = {\n    title: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    duration: \"\",\n    place: {\n      city: \"\",\n      area: \"\",\n      state: \"\",\n      address: \"\",\n      mapPosition: {\n        lat: 1.2832,\n        lng: 103.8466,\n      },\n      description: \"\",\n      image_url: \"\",\n      trip_id: this.props.trip_id,\n      // status: false,\n    },\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  updatePlace = (place) => {\n    this.setState({ place, trip_id: this.props.trip_id });\n  };\n\n  submitHandler = () => {\n    // console.log(this.state);\n    // console.log(this.state);\n    Axios.post(`${URL}/activities`, this.state, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        console.log(\"done\");\n        // this.setState({ status: true });\n        // for Trip.jsx\n        // console.log(JSON.stringify(res) + \" saved\");\n        // console.log(JSON.stringify(res.data.savedActivity) + \" savedddddd\");\n        this.props.addActivity(res.data.savedActivity);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    let {\n      title,\n      start_date,\n      end_date,\n      duration,\n      // place,\n      description,\n      image_url,\n    } = this.state;\n\n    // if (this.state.status) {\n    //   return <Redirect to=\"/\" />;\n    // }\n\n    return (\n      <div>\n        <div>\n          <Container>\n            <h1>Add Activity</h1>\n            <Row>\n              Title\n              <Form.Control\n                name=\"title\"\n                value={title}\n                placeholder=\"e.g. Visit local market\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Start date\n              <Form.Control\n                name=\"start_date\"\n                value={start_date}\n                type=\"date\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              End date\n              <Form.Control\n                name=\"end_date\"\n                value={end_date}\n                type=\"date\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Duration\n              <Form.Control\n                name=\"duration\"\n                value={duration}\n                placeholder=\"1hr\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Description\n              <Form.Control\n                name=\"description\"\n                value={description}\n                placeholder=\"Use the backdoor\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Image\n              <Form.Control\n                name=\"image_url\"\n                value={image_url}\n                placeholder=\"url\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Button onClick={this.submitHandler}>Submit</Button>\n\n            <Map\n              google={this.props.google}\n              center={{ lat:15.7076, lng:104.1920275 }} //vietnam\n              // center={{ lat: 1.2832, lng: 103.8466 }}\n              height=\"650px\"\n              zoom={6.26}\n              // setPlace={this.}\n              updatePlace={this.updatePlace}\n              activities={this.props.activities}\n            />\n          </Container>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Row } from \"react-bootstrap\";\n\nexport default class EditTrip extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    country: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    this.props.editTrip(this.state, this.props.trip._id);\n  };\n\n  componentDidMount = () => {\n    this.setState(this.props.trip);\n  };\n\n  render() {\n    let { title, description, country, start_date, end_date } = this.state;\n\n    return (\n      <div>\n        <h1>Edit Trip</h1>\n        <div>\n          <Row>\n            Title of Trip:\n            <Form.Control\n              name=\"title\"\n              value={title}\n              onChange={this.changeHandler}\n            />\n          </Row>\n          <Row>\n            Description:\n            <Form.Control\n              name=\"description\"\n              value={description}\n              onChange={this.changeHandler}\n            />\n          </Row>\n          <Row>\n            Country:\n            <Form.Control\n              name=\"country\"\n              value={country}\n              onChange={this.changeHandler}\n            />\n          </Row>\n          <Row>\n            Start date:\n            <Form.Control\n              name=\"start_date\"\n              value={start_date.split(\"T\")[0]}\n              type=\"date\"\n              onChange={this.changeHandler}\n            />\n          </Row>\n          <Row>\n            End date:\n            <Form.Control\n              name=\"end_date\"\n              value={end_date.split(\"T\")[0]}\n              type=\"date\"\n              onChange={this.changeHandler}\n            />\n          </Row>\n          <Button onClick={this.submitHandler}>Submit</Button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport EditTrip from \"./EditTrip\";\nimport AddActivity from \"../activities/AddActivity\";\nimport { Container, Button } from \"react-bootstrap\";\nimport AllActivities from \"../AllActivities\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class Trip extends Component {\n  state = {\n    trip: null,\n    trip_id: \"\",\n    activity: {\n      title: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      duration: \"\",\n      place: {\n        city: \"\",\n        area: \"\",\n        state: \"\",\n        address: \"\",\n        mapPosition: {\n          lat: \"\",\n          lng: \"\",\n        },\n      },\n      description: \"\",\n      image_url: \"\",\n    },\n    activities: [],\n    edit: false,\n    add: false,\n  };\n\n  showEdit = () => {\n    this.setState((prevState) => ({ edit: !prevState.edit }));\n  };\n\n  showAdd = () => {\n    this.setState((prevState) => ({ add: !prevState.add }));\n  };\n\n  editTrip = (obj, id) => {\n    Axios.put(`${URL}/trips/${id}`, obj, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        // console.log(\"done\");\n        //call method to call a re-render\n        this.getTrip();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  fetchTrips = () => {\n    let token = localStorage.getTrip(\"token\");\n\n    Axios.get(`${URL}/trips`, {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    })\n      .then((res) => {\n        // console.log(res.data);\n        // if (this.mounted) {\n        this.setState({ trips: res.data.trips });\n        // }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  getTrip = () => {\n    Axios.get(`${URL}/trips/${this.props.match.params.id}`, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        // console.log(res.data);\n        this.setState({\n          trip: res.data.trip,\n          activities: res.data.trip.activities,\n          trip_id: res.data.trip._id,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getTrip();\n  }\n\n  // activity\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    // console.log(this.state);\n    Axios.post(`${URL}/activities`, this.state, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        // console.log(\"done\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  addActivity = (activity) => {\n    this.setState({ activities: [...this.state.activities, activity] });\n    // console.log(\n    //   \"activities added to trip.state.activities \" + JSON.stringify(activity)\n    // );\n  };\n\n  render() {\n    let { trip, edit, add, activities } = this.state;\n\n    return (\n      <div>\n        <Container>\n          {trip ? (\n            <div>\n              <div>\n                <div>\n                  <h3>{trip.title}</h3>\n                </div>\n                <div>Description: {trip.description}</div>\n                <div>Country: {trip.country}</div>\n                <div>Start Date: {trip.start_date}</div>\n                <div>End Date: {trip.end_date}</div>\n                <div>Created By: {trip.createdBy.username}</div>\n              </div>\n              <Button onClick={this.showEdit}>Edit Trip</Button>\n              <br />\n              {edit && <EditTrip trip={trip} editTrip={this.editTrip} />}\n              <br />\n              <AllActivities activities={activities} />\n              <br />\n              <Button onClick={this.showAdd}>Add More Activity</Button>\n              <br />\n              {add && (\n                <AddActivity\n                  addActivity={this.addActivity}\n                  activities={this.state.activities}\n                  activity={this.state.trip.activities}\n                  trip_id={this.state.trip_id}\n                />\n              )}\n            </div>\n          ) : (\n            \"Loading...\"\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Form, Button, Row, Container } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\n\nclass AddTrip extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    country: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    status: false,\n  };\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = () => {\n    // console.log(this.state);\n    Axios.post(`${URL}/trips`, this.state, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        // console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n      });\n  };\n\n  render() {\n    let { title, description, country, start_date, end_date } = this.state;\n\n    if (this.state.status) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div>\n        <Container>\n          <h1>Add Trip</h1>\n          <div>\n            <Row>\n              Title of Trip:\n              <Form.Control\n                name=\"title\"\n                value={title}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Description:\n              <Form.Control\n                name=\"description\"\n                value={description}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Country:\n              <Form.Control\n                name=\"country\"\n                value={country}\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              Start date:\n              <Form.Control\n                name=\"start_date\"\n                value={start_date}\n                type=\"date\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Row>\n              End date:\n              <Form.Control\n                name=\"end_date\"\n                value={end_date}\n                type=\"date\"\n                onChange={this.changeHandler}\n              />\n            </Row>\n            <Button onClick={this.submitHandler}>Submit</Button>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AddTrip;\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Container, Button, Row, Card, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class AllPackingLists extends Component {\n  state = {\n    packingLists: [],\n  };\n\n  fetchPackingLists = () => {\n    let token = localStorage.getItem(\"token\");\n\n    Axios.get(`${URL}/packingLists`, {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    })\n      .then((res) => {\n        // console.log(res.data.packingLists);\n        this.setState({ packingLists: res.data.packingLists });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  deletePackingList = (e) => {\n    // console.log(e.target.id);\n    Axios.delete(`${URL}/packingLists/${e.target.id}`).then((res) => {\n      this.fetchPackingLists();\n    });\n  };\n\n  componentDidMount() {\n    this.fetchPackingLists();\n  }\n\n  render() {\n    // console.log(this.props.packingLists);\n    return (\n      <div>\n        <h1>Packing List</h1>\n        <Container fluid>\n          <Row>\n            {this.state.packingLists.map((packingList, index) => (\n              <Col key={packingList._id} md=\"3\">\n                <Card>\n                  <Card.Body>\n                    <div>\n                      {packingList.title}\n                      <br />\n                    </div>\n                    <div>\n                      <Link to={`/packingList/${packingList._id}`}>View</Link>\n                      <Button\n                        onClick={this.deletePackingList}\n                        variant=\"danger\"\n                        id={packingList._id}\n                        size=\"sm\"\n                        style={{ float: \"right\" }}\n                      >\n                        Delete\n                      </Button>\n                      {/* {packingList.item} <br /> */}\n                    </div>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n//45.44\n// markComplete={this.markComplete}\n\n// markComplete=(id)=>{\n// this.setState({packingList: this.state.todos.map(packingList)=>{\n//   if(packingList.id === id){\n//     packingList.completed = !packingList.conpleted\n//   }\n//   return packingList\n// }})\n// }\n\n// const {id, title} = this.props.packingList\n\n// <input type=\"checkbox\" onChange={this.props.markComplete.bind(this.props.items/desctipion)}/> {' '}\n// // props packign items\n\n// const btnStyle = {\n//   background: \"ff0000\",\n//   color: \"#fff\",\n//   border: \"none\",\n//   padding: \"5px 10px\",\n//   borderRadius: \"50%\",\n//   cursor: \"pointer\",\n//   float: \"right\",\n// };\n\n// style={btnStyle}\n\n// getStyle = () =>{\n//   return {\n//     textDecoration : this.PaymentResponse.packingList.completed ? \n//     \"line-through\" :\"none\"\n//   }\n// }\n\n// <div style={this.getStyle()}>\n\n// </div>","import React, { Component } from \"react\";\nimport { Form, Button, Row, Container } from \"react-bootstrap\";\n\nexport default class EditPackingList extends Component {\n  state = {\n    title: \"\",\n    items: [],\n  };\n\n  titleChangeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  itemChangeHandler = (e, index) => {\n    this.state.items[index] = e.target.value;\n    this.setState({ items: this.state.items });\n  };\n\n  removeHandler = (index) => {\n    this.state.items.splice(index, 1);\n    console.log(this.state.items, \"----\");\n    this.setState({ items: this.state.items });\n  };\n\n  submitHandler = () => {\n    this.props.editPackingList(this.state, this.props.packingList._id);\n  };\n\n  addItem = () => {\n    this.setState({ items: [...this.state.items, \"\"] });\n  };\n\n  componentDidMount = () => {\n    this.setState(this.props.packingList);\n  };\n\n  render() {\n    let { title, items } = this.state;\n\n    // console.log(this.state);\n\n    return (\n      <div>\n        <Container>\n          <h1>Edit Item</h1>\n          <Row>\n            Title:\n            <Form.Control\n              name=\"title\"\n              value={title}\n              placeholder=\"Summer\"\n              onChange={this.titleChangeHandler}\n            />\n          </Row>\n          <div>\n            Items:\n            {items.map((item, index) => (\n              <Row key={index}>\n                <Form.Control\n                  name=\"items\"\n                  value={item}\n                  placeholder=\"FlipFlops\"\n                  onChange={(e) => this.itemChangeHandler(e, index)}\n                />\n                <Button\n                  variant=\"danger\"\n                  onClick={() => this.removeHandler(index)}\n                >\n                  Remove\n                </Button>\n              </Row>\n            ))}\n          </div>\n          <Button onClick={(e) => this.addItem(e)}>Add more item</Button>\n          <Button onClick={this.submitHandler}>Submit</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport EditPackingList from \"./EditPackingList\";\nimport { Container, Button, ListGroup } from \"react-bootstrap\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class PackingList extends Component {\n  state = {\n    packingList: null,\n    edit: false,\n  };\n\n  showEdit = () => {\n    this.setState((prevState) => ({ edit: !prevState.edit }));\n  };\n\n  editPackingList = (obj, id) => {\n    Axios.put(`${URL}/packingLists/${id}`, obj, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        this.getPackingList();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  fetchPackingLists = () => {\n    let token = localStorage.getItem(\"token\");\n\n    Axios.get(`${URL}/packingLists`, {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    })\n      .then((res) => {\n        this.setState({ packingLists: res.data.packingLists });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  deletePackingList = (e) => {\n    // this.props.deletePackingList(e.target.id);\n    // console.log(this.props);\n  };\n\n  getPackingList = () => {\n    Axios.get(`${URL}/packingLists/${this.props.match.params.id}`, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        // console.log(res.data);\n        this.setState({ packingList: res.data.packingList });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  componentDidMount() {\n    this.getPackingList();\n  }\n\n  render() {\n    let { packingList, edit } = this.state;\n    return (\n      <div>\n        <Container>\n          <h1>Packing List</h1>\n          {packingList ? (\n            <div>\n              <h3>For: {packingList.title}</h3>\n              {packingList.items.map((item, index) => (\n                <div>\n                  <br />\n                  <h3>Items to pack: </h3>\n                  <ListGroup>\n                    <ListGroup.Item as=\"li\" key={index}>\n                      {item}\n                    </ListGroup.Item>\n                  </ListGroup>\n                </div>\n              ))}\n              <Button onClick={this.showEdit}>Edit Packing List</Button>\n              {edit && (\n                <EditPackingList\n                  packingList={packingList}\n                  editPackingList={this.editPackingList}\n                />\n              )}\n            </div>\n          ) : (\n            \"Loading...\"\n          )}\n        </Container>\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from \"react\";\nimport { Form, Button, Row, Container } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class AddPackingList extends Component {\n  state = {\n    title: \"\",\n    items: [],\n    status: false,\n  };\n\n  titleChangeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  itemChangeHandler = (e, index) => {\n    this.state.items[index] = e.target.value;\n    this.setState({ items: this.state.items });\n  };\n\n  removeHandler = (index) => {\n    this.state.items.splice(index, 1);\n    // console.log(this.state.items, \"----\");\n    this.setState({ items: this.state.items });\n  };\n\n  submitHandler = (e) => {\n    // console.log(this.state);\n    Axios.post(`${URL}/packingLists`, this.state, {\n      headers: { \"x-auth-token\": localStorage.token },\n    })\n      .then((res) => {\n        // console.log(\"done\");\n        this.setState({ status: true });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  addItem = () => {\n    this.setState({ items: [...this.state.items, \"\"] });\n  };\n\n  render() {\n    let { title, items } = this.state;\n\n    if (this.state.status) {\n      return <Redirect to=\"/packingLists\" />;\n    }\n\n    return (\n      <div>\n        <Container>\n          <h1>Add Item</h1>\n          <Row>\n            Title:\n            <Form.Control\n              name=\"title\"\n              value={title}\n              placeholder=\"Summer\"\n              onChange={this.titleChangeHandler}\n            />\n          </Row>\n          <div>\n            Items:\n            {items.map((item, index) => (\n              <Row key={index}>\n                <Form.Control\n                  name=\"items\"\n                  value={item}\n                  placeholder=\"FlipFlops\"\n                  onChange={(e) => this.itemChangeHandler(e, index)}\n                />\n                <Button\n                  variant=\"danger\"\n                  onClick={() => this.removeHandler(index)}\n                >\n                  Remove\n                </Button>\n              </Row>\n            ))}\n          </div>\n\n          <Button onClick={(e) => this.addItem(e)}>Add more item</Button>\n          <Button onClick={this.submitHandler}>Submit</Button>\n        </Container>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, isAuth, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAuth ? <Component {...props} {...rest} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import React, { Component } from \"react\";\nimport {\n  Switch,\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Axios from \"axios\";\nimport Home from \"./component/Home\";\nimport Register from \"./component/auth/Register\";\nimport Login from \"./component/auth/Login\";\nimport Profile from \"./component/auth/Profile\";\nimport Navigation from \"./component/Navigation\";\nimport AllActivities from \"./component/AllActivities\";\nimport Activity from \"./component/activities/Activity\";\nimport AddActivity from \"./component/activities/AddActivity\";\nimport Trip from \"./component/trips/Trip\";\nimport AddTrip from \"./component/trips/AddTrip\";\nimport AllPackingLists from \"./component/AllPackingLists\";\nimport PackingList from \"./component/packingLists/PackingList\";\nimport AddPackingList from \"./component/packingLists/AddPackingList\";\nimport { decode } from \"jsonwebtoken\";\nimport PrivateRoute from \"./component/PrivateRoute\";\nimport { Alert } from \"react-bootstrap\";\n\nconst URL = process.env.REACT_APP_URL;\n\nexport default class App extends Component {\n  state = {\n    // activities: [],\n    // packingLists: [],\n    trips: [],\n    errorMessage: null,\n    isAuth: false,\n    user: null,\n  };\n\n  // auth\n  getUserProfile = (token) => {\n    Axios.get(`${URL}/auth/user`, {\n      headers: { \"x-auth-token\": token },\n    })\n      .then((res) => {\n        // console.log(res.data);\n        this.setState({\n          isAuth: true,\n          user: res.data.user,\n        });\n      })\n      .catch((err) => {\n        // console.log(err);\n        // this.setState({\n        //   isAuth: false\n        // });\n      });\n  };\n\n  loginHandler = (credentials) => {\n    //login here\n    Axios.post(`${URL}/auth/login`, credentials)\n      .then((res) => {\n        console.log(\"User logged in\");\n\n        localStorage.setItem(\"token\", res.data.token);\n        this.getUserProfile(res.data.token); //get uptodate user information\n\n        this.setState({\n          isAuth: true,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          errorMessage: err.response.data.message,\n        });\n      });\n  };\n\n  registerHandler = (credentials) => {\n    //login here\n    Axios.post(`${URL}/auth/register`, credentials)\n      .then((res) => {\n        console.log(res.data);\n        localStorage.setItem(\"token\", res.data.token);\n        this.setState({\n          isAuth: true,\n        });\n      })\n      .catch((err) => {\n        // console.log(err);\n        this.setState({\n          isAuth: false,\n        });\n      });\n  };\n\n  logoutHandler = (e) => {\n    e.preventDefault();\n    console.log(\"User logged out\");\n    this.setState({\n      items: [],\n      errorMessage: null,\n      isAuth: false,\n      user: null,\n    });\n\n    localStorage.removeItem(\"token\");\n  };\n\n  componentDidMount() {\n    let token = localStorage.getItem(\"token\");\n\n    if (!(token == null)) {\n      let decodedToken = decode(token);\n\n      if (!decodedToken) {\n        localStorage.removeItem(\"token\");\n      } else {\n        this.getUserProfile(token);\n        // this.setState({\n        //   isAuth: true,\n        // });\n      }\n    }\n    // this.fetchActivities();\n    // this.fetchTrips();\n    // this.fetchPackingLists();\n  }\n\n  render() {\n    let { isAuth, user, errorMessage } = this.state;\n    // console.log(\"this belongs to the user logined\" + );\n\n    return (\n      <>\n        <Router>\n          <Navigation user={user} logout={this.logoutHandler} />\n          {errorMessage && <Alert>{errorMessage}</Alert>}\n          <Switch>\n            <Route\n              path=\"/register\"\n              exact\n              render={() => \n                isAuth ? (\n                  <Redirect to=\"/\" />\n                ) : (\n                <Register register={this.registerHandler} />\n                )\n              }\n            />\n            <Route\n              path=\"/login\"\n              exact\n              render={() =>\n                isAuth ? (\n                  <Redirect to=\"/\" />\n                ) : (\n                  <Login login={this.loginHandler} />\n                )\n              }\n            />\n            <PrivateRoute\n              exact\n              path=\"/user/:id\"\n              isAuth={isAuth}\n              component={Profile}\n              currentUser={user}\n            />\n            <PrivateRoute\n              exact\n              path=\"/\"\n              isAuth={isAuth}\n              component={Home}\n              currentUser={user}\n            />\n            <PrivateRoute\n              exact\n              path=\"/trip/add\"\n              isAuth={isAuth}\n              component={AddTrip}\n            />\n            <PrivateRoute\n              exact\n              path=\"/trip/:id\"\n              isAuth={isAuth}\n              component={Trip}\n            />\n            <PrivateRoute\n              exact\n              path=\"/activities\"\n              isAuth={isAuth}\n              component={AllActivities}\n            />\n            <PrivateRoute\n              exact\n              path=\"/activity/add\"\n              isAuth={isAuth}\n              component={AddActivity}\n            />\n            <PrivateRoute\n              exact\n              path=\"/activity/:id\"\n              isAuth={isAuth}\n              component={Activity}\n            />\n            <PrivateRoute\n              exact\n              path=\"/packingLists\"\n              isAuth={isAuth}\n              component={AllPackingLists}\n            />\n            <PrivateRoute\n              exact\n              path=\"/packingList/add\"\n              isAuth={isAuth}\n              component={AddPackingList}\n            />\n            <PrivateRoute\n              exact\n              path=\"/packingList/:id\"\n              isAuth={isAuth}\n              component={PackingList}\n            />\n          </Switch>\n        </Router>\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}